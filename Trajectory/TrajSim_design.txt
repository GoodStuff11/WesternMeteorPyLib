

class Station(object):

	def __init__(self):

		self.lat
		self.lon
		self.elev
		self.station_id
		self.fps

		# Time offset from the real time
		self.t_offset

		# Uncertanties in observations
		self.obs_ang_std



class SimMeteor(object):

	def __init__(self):

		# Generated values
		self.ra_g
		self.dec_g
		self.Vg
		self.sol

		self.beg_height

		# Calculated apparent values
		self.ra
		self.dec
		self.v_init

		self.jdt_ref
		self.state_vector
		self.radiant_eci
		self.radiant_eq

		# List of observations - ObservedPoints objects from Trajectory.Trajectory
		self.observations = []




### ShowerSim ###
##############################################################################################################
Inputs:
	n_meteors: [int] Number of simulated meteor radiants to draw.
	RA_g
	RA_g_sigma
	Dec_g
	Dec_g_sigma
	dRA
	dDec
	Vg
	Vg_sigma
	year
	Sol - mean of Gaussian activity profile
	Sol_sigma - stddev of Gaussian activity profile
	beg_height - mean of Gaussian beginning height profile
	beg_height_sigma - stddev of beginning height profile


Outputs:
	meteor_list: [list of Meteor objects]
		SimMeteor object:
			- RA_g
			- Dec_g
			- Vg
			- Sol
			- beg_height


Comments:
	- Why not sun-centred ecliptic coords? 
		CONS: Recalculating IAU shower coordinates to ecliptic might be a pain.


##############################################################################################################




### TrajectorySim ###
##############################################################################################################

Inputs:
	- SimMeteor object
	- list of Station objects
	- sky_volume:
		- ['top', radius, radius_obs] - Sky volume above the mean coordinates of the stations, state vector positions will be generated within the square U(-radius, +radius) for both latitude and longitude (radius in radians). The meteor will only be "observed" inside the radius_obs.
		- ['off', d_lat, d_lon, radius, radius_obs] - Sky volume is above the mean coordinats of the station, but moved by the given offsets in latitude and longitude (radians).
	- velocity_sim:
		- ['sim', mass, density] - Campbell-Brown & Koschny (2004) meteor ablation model.
		- ['constant', duration] - Constant velocity.
		- ['jacchia', duration, a1, a2] - Jacchia exponential deceleration model.
	- angle_noise: [float] Gaussian noise added to measurements (radians)
	- angle_systematic: [list] List of systematic offsets added to measurements per station (radians).



Outputs:
	Added to meteor object:
		- ObservedPoints





### ADDITIONAL FUNCTIONS ###

xxxxxxxxxxxxxxxx
- Sol2JD - DONE
xxxxxxxxxxxxxxxx
- Change the orbit code to calculate everything from the initial state vector, not the average! - DONE
	- This solves a lot of issues with average positions, etc.
xxxxxxxxxxxxxxxx
- geocentric2apparent(ra_g, dec_g, v_g, state_vector, jd_ref) - DONE

	- QUESTION: SHOULD WE DO IT NUMERICALLY?
		- v_init can be calculated from v_g
		- then minimize the angle between vectors defined by the modelled geocentric radiant the one that is
			being matched
		- input to minimization should be ra_apparent and dec_apparent, not 3D radiant vector!
xxxxxxxxxxxxxxxx



### CONCERNS ###

- How to get zg for MetSim with the given data? Does it matter?
- MetSim - need to get the part of trajectory which when meteor starts ablating
- Simulated trajectory - gravity drop?

- Using Margaret's model, investigate how the geocentric radiant changes when the real above-atmosphere
	velocity is used to determine the geocentric radiant, and when the velocity at the point of the first
	detectable light production is used. Does this cause more dispersion, or just a shift?


- Getting instrumental magnitude from meteor luminosity?


### COMMENTS ###

- simulated meteor shower names:
	- Alpha Simulantids
	- Beta Simulantids